pipeline{
   agent { label 'jenkins-agent' }
   tools{
        jdk 'java-17'
        maven 'Maven3'
    }
    environment{
            APP_NAME = "register-app-pipeline"
            RELEASE = "1.0.0"
            DOCKER_USER = "abhipatil369"
            DOCKER_PASS = 'dockerhub'
            IMAGE_NAME = "${DOCKER_USER}" + "/" + "${APP_NAME}"
            IMAGE_TAG = "${RELEASE}-${BUILD_NUMBER}"
	        
    }
    stages{
        stage("Cleanup Workspace"){
               steps {
                  cleanWs()
               }
        }
        stage("checkout from scm"){
              steps{
              git branch: 'main', credentialsId: 'github', url: 'https://github.com/abhipatil003/register-app.git'
              }
        }   
         stage("build application"){
               steps{
                   sh "mvn clean package"
               }
        }
         stage("test application"){
               steps{
                    sh "mvn test"
               }
        
        }
         stage("sonarqube analysis"){
               steps{
                  script{
                       withSonarQubeEnv(credentialsId: 'jenkins-sonaqube-token'){
                       sh "mvn sonar:sonar"
                  } 
              }
         } 
      }
        stage("Quality Gate"){
           steps {
               script {
                    waitForQualityGate abortPipeline: false, credentialsId: 'jenkins-sonaqube-token'
                }	
            }

        }
         stage("Build & Push Docker Image") {
            steps {
                script {
                    docker.withRegistry('',DOCKER_PASS) {
                        docker_image = docker.build "${IMAGE_NAME}"
                    }

                    docker.withRegistry('',DOCKER_PASS) {
                        docker_image.push("${IMAGE_TAG}")
                        docker_image.push('latest')
                     }
               }
          }
       }
        stage("Trivy Scan") {
           steps {
               script {
	            sh ('docker run -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy image abhipatil369/register-app-pipeline:latest --no-progress --scanners vuln  --exit-code 0 --severity HIGH,CRITICAL --format table')
               }
           }
       }
        
    }
}
